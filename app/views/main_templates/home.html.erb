<!-- app/views/main_templates/home.html.erb-->
<h1>Dictation App</h1>

<button id="recordButton">Start Recording</button><br>
<button id="stopButton" disabled>Stop Recording</button><br>

<audio id="audioPlayback" controls></audio>

<form id="audioForm" action="/submit" method="post" enctype="multipart/form-data">
  <input type="file" id="audioFileInput" name="audio_file" accept="audio/*" style="display: none;">
  <button type="submit">Submit</button>
</form>

<script>
  let mediaRecorder;
  let audioChunks = [];

  const recordButton = document.getElementById('recordButton');
  const stopButton = document.getElementById('stopButton');
  const audioPlayback = document.getElementById('audioPlayback');
  const audioFileInput = document.getElementById('audioFileInput');

  recordButton.addEventListener('click', async () => {
    audioChunks = [];
    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
    mediaRecorder = new MediaRecorder(stream);
    mediaRecorder.start();

    mediaRecorder.addEventListener('dataavailable', event => {
      audioChunks.push(event.data);
    });

    mediaRecorder.addEventListener('stop', () => {
      const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });
      const audioUrl = URL.createObjectURL(audioBlob);
      audioPlayback.src = audioUrl;

      // Prepare the audio file input for form submission
      const file = new File([audioBlob], 'recording.webm', { type: 'audio/webm' });
      const dataTransfer = new DataTransfer();
      dataTransfer.items.add(file);
      audioFileInput.files = dataTransfer.files;
    });

    recordButton.disabled = true;
    stopButton.disabled = false;
  });

  stopButton.addEventListener('click', () => {
    mediaRecorder.stop();
    recordButton.disabled = false;
    stopButton.disabled = true;
  });
</script>
